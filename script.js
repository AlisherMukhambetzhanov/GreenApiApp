// üîß –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
function getCredentials() {
  const idInstance = document.getElementById("idInstance").value.trim();
  const apiTokenInstance = document.getElementById("apiTokenInstance").value.trim();
  if (!idInstance || !apiTokenInstance) {
    alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ ID Instance –∏ API Token.");
    throw new Error("Missing credentials");
  }
  return { idInstance, apiTokenInstance };
}

// üìå –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—è –æ—Ç–≤–µ—Ç–∞
function displayResponse(response) {
  const textarea = document.getElementById("response");
  textarea.value = JSON.stringify(response, null, 2);
}

// üîç –ú–µ—Ç–æ–¥ getSettings
async function getSettings() {
  try {
    const { idInstance, apiTokenInstance } = getCredentials();
    const res = await fetch(`https://api.green-api.com/waInstance${idInstance}/getSettings/${apiTokenInstance}`);
    const data = await res.json();
    displayResponse(data);
  } catch (error) {
    displayResponse({ error: error.message });
  }
}

// üîÑ –ú–µ—Ç–æ–¥ getStateInstance
async function getStateInstance() {
  try {
    const { idInstance, apiTokenInstance } = getCredentials();
    const res = await fetch(`https://api.green-api.com/waInstance${idInstance}/getStateInstance/${apiTokenInstance}`);
    const data = await res.json();
    displayResponse(data);
  } catch (error) {
    displayResponse({ error: error.message });
  }
}

// üí¨ –ú–µ—Ç–æ–¥ sendMessage
async function sendMessage() {
  try {
    const { idInstance, apiTokenInstance } = getCredentials();
    const chatId = document.getElementById("chatId").value.trim();
    const message = document.getElementById("message").value.trim();

    if (!chatId || !message) {
      alert("–í–≤–µ–¥–∏—Ç–µ Chat ID –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ.");
      return;
    }

    const res = await fetch(`https://api.green-api.com/waInstance${idInstance}/sendMessage/${apiTokenInstance}`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chatId: chatId.endsWith("@c.us") ? chatId : `${chatId}@c.us`,
        message: message,
      }),
    });

    const data = await res.json();
    displayResponse(data);
  } catch (error) {
    displayResponse({ error: error.message });
  }
}

// üìé –ú–µ—Ç–æ–¥ sendFileByUrl
async function sendFileByUrl() {
  try {
    const { idInstance, apiTokenInstance } = getCredentials();
    const chatId = document.getElementById("chatIdFile").value.trim();
    const fileUrl = document.getElementById("fileUrl").value.trim();

    if (!chatId || !fileUrl) {
      alert("–í–≤–µ–¥–∏—Ç–µ Chat ID –∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª.");
      return;
    }

    const res = await fetch(`https://api.green-api.com/waInstance${idInstance}/sendFileByUrl/${apiTokenInstance}`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chatId: chatId.endsWith("@c.us") ? chatId : `${chatId}@c.us`,
        urlFile: fileUrl,
        fileName: fileUrl.split("/").pop(),
        caption: "–§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ GREEN-API",
      }),
    });

    const data = await res.json();
    displayResponse(data);
  } catch (error) {
    displayResponse({ error: error.message });
  }
}
